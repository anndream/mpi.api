language: elixir
sudo: required
cache:
  directories:
  - deps
services:
  - docker
  - postgresql
addons:
  postgresql: "9.5"
elixir:
  - 1.4.2
otp_release:
  - 19.2
apt:
  packages:
    - inotify-tools
env:
  global:
    - MIX_ENV=test
    - DOCKER_HUB_ACCOUNT=nebo15
    - MAIN_BRANCHES="master develop staging" # Branches on which you want version to be incremented
    - RELEASE_BRANCH="master"
    # Docker credentials
    - secure: "..."
branches:
  # Releases are generated automatically, stop infinite build loop
  except:
    - /[0-9]*\.[0-9]*\.[0-9]*/
before_install:
  # Expose MQ and DB to Docker container
  - sudo ./bin/ci/init-db.sh
script:
  # Increment version in mix.exs
  # Uncomment this if you want to increment patch version on each Travis build.
  - "./bin/version-increment.sh"
  # Install dependencies
  - mix deps.get
  # Run all tests except pending ones
  - mix test --exclude pending --trace
  # Submit code coverage report to Coveralls
  # Add --pro if you using private repo.
  - mix coveralls.travis
  # Run static code analysis
  - mix credo --strict
  # Check code style
  - mix dogma
  # Build Docker container
  - "./bin/build.sh"
  # Initialize DB for Docker container
  - "MIX_ENV=dev mix ecto.setup"
  # Run Docker container
  - sudo ./bin/start.sh
  - sleep 5
  - docker ps
  - RUNNING_CONTAINERS=`docker ps | wc -l`;
  - if [ "${RUNNING_CONTAINERS//[[:space:]]/}" == "1" ]; then echo "[E] Container is not started\!"; docker logs mpi --details --since 5h; exit 1; fi;
  # Run acceptance tests on Docker container
  - "MIX_TEST_HOST=localhost MIX_TEST_PORT=4000 mix test test/acceptance"
after_failure:
  - docker logs asm_il --details --since 5h
after_success:
  # Submit Docker container to Docker Hub and create GitHub Release by pushing tag with changelog
  - ./bin/ci/push.sh
