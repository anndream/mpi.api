language: elixir
sudo: required
cache:
  directories:
    - deps
services:
  - docker
  - postgresql
addons:
  postgresql: "9.5"
elixir:
  - 1.4.2
otp_release:
  - 19.2
apt:
  packages:
    - inotify-tools
env:
  global:
    - MIX_ENV=test
    - DOCKER_HUB_ACCOUNT=nebo15
    - MAIN_BRANCHES="master develop staging" # Branches on which you want version to be incremented
    - RELEASE_BRANCH="master"
    # Docker Credentials
    - secure: "M22GW56dMtXNJzMwekxmvS6sPaG8KbiihftBsLXSak6U254YUsuiw0Nos+5xHkmgiEllKFSHcii/oLyLV67sUwysMpu+NlcHrx/6aJXAiU8EsUF9V7mHbuC7nLbwGkrjFu6xIqc/xrVI0RIb1FK2PV2fvIxy3uNlFGnCDuctuQoBv47ksSkmitrUiwV3+3BUUsylHZ5NyVmeQsU4/t32onT2YmycHxDqcmopr9R1QTbsipuEnAd4ulhtc9QiZsW+MUKsx9jeKDy36MEfGZF7d4duy9esLT1TVisUapbPIcO8gFFXqkJTgQF8J8eG4u1cTs258Zoy7B7EpNZqbUFlYvrlfpksAJLP4MxGONWYNcoGagAJxrW14U59mp3JIEfohZ76zG3bLwTIneUoA5BWXIluT8LrRAhya1jF8nQpbRTymzSDWhg5orq+qxxS3j94nPTACCjhv+JpGTCOM5EQfyVm3S1hSQhkUA6HZZbyJlHUAsROJ/mCiXtmjmpZjOLVYkFfEW36IJVstUy/Wyxhy3ntiENPeQl4ArfUclp5TpoT1MJzl+ByesjwL5BxQHUOPgh+J8dHUE4N5MzrIHzyqFA7RxzsJJcLsVx6AbijwqySavWFymo+nmjOPjbzlKIutZYW0BP2AQcWn4kVyR3JCTbmcnqG7Q7H1Ex0wRqzrzA="
    # GitHub Credentials
    - secure: "Yxg9Rh0O83SmaRbtRZVg/9bhBLfvCbDk2ZgwN+wXmUlOneCMNQ9ZXLeiAfUj03pAuMXskRCOnvG6Qajd1VOIhNWtvc8Gckp5T5dtUYlSDbHPQE0xsdfDHKNU6BISt0A7AkFF6U147ooH2/n73azbz58eeW0y0yfzMNdIf3Qpw6jUU6es6EAGW4RJI5HU+mE53E3VI97lVWOJD2r9auYk+0VeYccCBvVxyxePDZTr7wtuHxKgA4ZpJLsXbSazQjSHyxXumYyOX4L6m2i+fzOH6g0hBJc/9J8Gqvc1sIkNrDysW3g6m773l1S4bSfptF//5cAhg723s4tJyVhuDcwAmjjLnXcTXR01cXer4XfuCp6FNUu8ZHE3GIJ57MrxvU6mHCLIwZ9qtqmEepW/m+XwyVApf8PIt8R5aAOEQniAbBIcHanKEQZ3cG1vH7mvPOi8CvRA3HexsXk/i1e90oFMFp1GQnPX0g8D6GAZUqMbKkBr5NV90iAKwuuaOfmGyCfYS+uyzDZc+uZffnlEM4VkAWEH7+Nnhw+4kq0IMlhCT4nRdSuG3wAkuMDg75WZbVG4QxBFO5YGZivT9r91YT92DaCWwu39f/nUdZXcp4ZAyvT8E+PMpZmbjqJ0mb43qg7hGb9kzdXuDAvqP9Ngg9Gkx/4/bZbSuAWGtCmpCmXiSCE="
branches:
  # Releases are generated automatically, stop infinite build loop
  except:
    - /[0-9]*\.[0-9]*\.[0-9]*/
before_install:
  # Expose MQ and DB to Docker container
  - sudo ./bin/ci/init-db.sh
script:
  # Increment version in mix.exs
  - ./bin/version-increment.sh
  # Install dependencies
  - mix deps.get
  # Run all tests except pending ones
  - mix test --exclude pending --trace
  # Submit code coverage report to Coveralls
  # Add --pro if you using private repo.
  - mix coveralls.travis --exclude pending
  # Run static code analysis
  - mix credo --strict
  # Check code style
  - mix dogma
  # Build Docker container
  - ./bin/build.sh
  # Initialize DB for Docker container
  - MIX_ENV=dev mix ecto.setup
  # Run Docker container
  - sudo ./bin/start.sh
  - sleep 5
  - docker ps
  - RUNNING_CONTAINERS=`docker ps | wc -l`;
  - if [ "${RUNNING_CONTAINERS//[[:space:]]/}" == "1" ]; then echo "[E] Container is not started\!"; docker logs mpi --details --since 5h; exit 1; fi;
  # Run acceptance tests on Docker container
  - "MIX_TEST_HOST=localhost MIX_TEST_PORT=4000 mix test test/acceptance"
after_failure:
  - docker logs mpi --details --since 5h
after_success:
  # Submit Docker container to Docker Hub and create GitHub Release by pushing tag with changelog
  - ./bin/ci/push.sh
